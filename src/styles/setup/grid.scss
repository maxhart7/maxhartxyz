// scss-lint:disable DeclarationOrder, MergeableSelector, ImportantRule

.cols {
    align-items: stretch;
    flex-wrap: wrap;
    margin: 0 calc(0 - (#{$mobile-gutter-width} / 2));
  
    @include bp(md) {
      margin: 0 calc(0 - (#{$tablet-gutter-width} / 2));
    }
  
    @include bp(lg) {
      margin: 0 calc(0 - (#{$desktop-gutter-width} / 2)) calc(0 - (#{$desktop-gutter-width} / 2 ));
    }
  
    &.is-mobile {
      display: flex;
    }
  
    &.align-center {
      justify-content: center;
    }
  
    @include bp(sm) {
      display: flex;
    }
  }
  
  .col {
    box-sizing: border-box;
    display: block;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    padding: 0 calc(#{$mobile-gutter-width} / 2);
  
    @include bp(md) {
      padding: 0 calc(#{$tablet-gutter-width} / 2) calc($tablet-gutter-width / 2);
    }
  
    @include bp(lg) {
      padding: 0 calc($desktop-gutter-width / 2) calc($desktop-gutter-width / 2);
    }
  
    &:last-child {
      margin: 0;
    }
  
    &.flex {
      display: flex;
    }
  
    @for $i from 1 through 12 {
      &.is-#{$i} {
        flex: none;
        width: calc($i / 12) * 100%;
      }
  
      &.is-offset-#{$i} {
        margin-left: calc($i / 12) * 100%;
      }
    }
  
    @include bp(sm) {
      margin: 0;
    }
  
    @include bp(sm) {
      @for $i from 1 through 12 {
        &.is-#{$i}-sm {
          flex: none;
          width: calc($i / 12) * 100%;
        }
  
        &.is-offset-#{$i}-sm {
          margin-left: calc($i / 12) * 100%;
        }
      }
    }
  
    @include bp(md) {
      @for $i from 1 through 12 {
        &.is-#{$i}-md {
          flex: none;
          width: calc($i / 12) * 100%;
        }
  
        &.is-offset-#{$i}-md {
          margin-left: calc($i / 12) * 100%;
        }
      }
    }
  
    @include bp(lg) {
      @for $i from 1 through 12 {
        &.is-#{$i}-lg {
          flex: none;
          width: calc($i / 12) * 100%;
        }
  
        &.is-offset-#{$i}-lg {
          margin-left: calc($i / 12) * 100%;
        }
      }
    }
  
    @include bp(xl) {
      @for $i from 1 through 12 {
        &.is-#{$i}-xl {
          flex: none;
          width: calc($i / 12) * 100%;
        }
  
        &.is-offset-#{$i}-xl {
          margin-left: calc($i / 12) * 100%;
        }
      }
    }
  
    img {
      height: auto;
      width: 100%;
    }
  }
  
  .text-align-center {
    text-align: center;
  }
  
  .hidden-touch {
    display: none !important;
  
    @include bp(lg) {
      display: flex !important;
    }
  }
  
  .hidden-mobile {
    display: none !important;
  
    @include bp(md) {
      display: flex !important;
    }
  }
  
  .hidden-tablet {

    @include bp(md) {
      display: none !important;
    }
  
    @include bp(lg) {
      display: flex !important;
    }
  }
  
  .hidden-desktop {
    @include bp(lg) {
      display: none !important;
    }
  }
  
  .hidden-desktop-block {
    @include bp(lg) {
      display: none !important;
    }
  }
  
  .hidden-touch-block {
    display: none !important;
  
    @include bp(lg) {
      display: block !important;
    }
  }
  
  .hidden-mobile-block {
    display: none !important;
  
    @include bp(md) {
      display: block !important;
    }
  }
  
  .hidden-tablet-block {

    @include bp(md) {
      display: none !important;
    }
  
    @include bp(lg) {
      display: block !important;
    }
  }

  .valign-center {
    align-items: center;
    display: flex;
  }

  .justify-flex-end {
    justify-content: flex-end;
  }
  
  .container {
    box-sizing: border-box;
    margin: auto;
    max-width: var(--container-max-width);
    overflow: hidden;
    padding: 0 calc(#{$mobile-gutter-width} / 2);
    width: 100%;
  
    @include bp(md) {
      padding: 0 calc(#{$tablet-gutter-width} / 2);
    }
  
    @include bp(custom, min, calc($container-max-width + calc($desktop-gutter-width / 2) )) {
      padding: 0;
    }
  }
  